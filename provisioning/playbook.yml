---
- hosts: all
  user: vagrant
  sudo: True


  tasks:

    - name: Whitelist Gitlab
      shell: if [ ! -n "$(grep "^gitlab.rambler.ru " ~/.ssh/known_hosts)" ]; then ssh-keyscan gitlab.rambler.ru >> ~/.ssh/known_hosts 2>/dev/null; fi
      sudo: False

    - name: Set locale
      locale_gen: name=ru_RU.UTF-8 state=present

    - name: Applying profile
      action: template src=templates/.profile dest=/home/vagrant/.profile

    - name: Add Redis Chris Lea's PPA
      apt_repository: repo='ppa:chris-lea/redis-server' state=present

    - name: Add Python Repository
      apt_repository: repo='ppa:fkrull/deadsnakes' state=present

    - name: Update apt
      apt: update_cache=yes cache_valid_time=3600

    - name: Install apt packages
      apt: name='{{ item }}'
      with_items:
        - build-essential
        - libxml2-dev
        - libxslt1-dev
        - python3.5
        - python3.5-dev
        - python3-pip
        - python-pip
        - postgresql
        - libpq-dev
        - libjpeg62
        - libjpeg62-dev
        - libfreetype6
        - libfreetype6-dev
        - zlib1g-dev
        - git-core
        - redis-server
        - git
        - nginx

    - name: symlink imaging library files
      action: file src={{ item[0] }} dest={{ item[1] }} state=link
      with_items:
        - ['/usr/lib/x86_64-linux-gnu/libfreetype.so', '/usr/lib/libfreetype.so']
        - ['/usr/lib/x86_64-linux-gnu/libz.so', '/usr/lib/libz.so']
        - ['/usr/lib/x86_64-linux-gnu/libjpeg.so.62', '/usr/lib/x86_64-linux-gnu/libjpeg.so']
        - ['/usr/lib/x86_64-linux-gnu/libjpeg.so', '/usr/lib/libjpeg.so']

    - name: Install pip3 packages
      pip: requirements=/home/vagrant/realty-front/requirements.txt executable=pip3

    - name: Install pip packages
      pip: requirements=/home/vagrant/realty-front/requirements2.txt

    - name: Ensure that the default site is disabled
      action: file dest=/etc/nginx/sites-enabled/default state=absent
      notify: reload nginx

    - name: Copy nginx config
      action: template src=templates/nginx.conf dest=/etc/nginx/nginx.conf
      notify: reload nginx

    - name: Run nginx
      service: name=nginx state=started enabled=yes

    - name: create supervisord config folder
      action: file dest=/etc/supervisor state=directory owner=root

    - name: create supervisord config
      action: template src=templates/supervisord.conf dest=/etc/supervisord.conf

    - name: create supervisord init script
      action: template src=templates/supervisord.sh dest=/etc/init.d/supervisord mode=0755

    - name: start supervisord service and have it run during system startup
      action: service name=supervisord state=started enabled=yes

    - name: schedule Supervisor to start on Vagrant up
      shell: update-rc.d supervisord defaults

    - name: create supervisor program config
      action: template src=templates/supervisor.ini dest=/etc/supervisor/realty.ini
      notify:
        - restart app

    - name: ensure log directory
      action: file dest=/home/vagrant/var/log state=directory owner=vagrant

#    - name: start app
#      action: supervisorctl name=realty state=started

  handlers:
    - name: restart app
      action: supervisorctl name=realty state=restarted

    - name: reload nginx
      service: name=nginx state=reloaded

    - name: restart nginx
      service: name=nginx state=restarted enabled=yes
